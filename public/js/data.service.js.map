{"version":3,"sources":["data.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAUA;gBAEI,qBAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBAEtB,SAAI,GAAY;wBACpB,EAAE,IAAI,EAAC,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAC;wBACtC,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAC;wBACpC,EAAE,IAAI,EAAE,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAC;qBAC3C,CAAC;gBAN+B,CAAC;gBAOlC,6BAAO,GAAP;oBAEI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;oBAEpC,sDAAsD;oBACtD,oBAAoB;gBACxB,CAAC;gBACD,6BAAO,GAAP,UAAQ,IAAY,EAAE,KAAa;oBAE/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC3C,CAAC;gBAED,8BAAQ,GAAR;oBACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;yBAC/B,GAAG,CAAC,UAAC,IAAa;wBAEf,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;wBACjC,IAAI,KAAK,GAAW,EAAE,CAAC;wBACvB,GAAG,CAAA,CAAC,IAAI,KAAK,IAAI,SAAS,CAAC,CAAA,CAAC;4BACxB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;4BAC9B,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;4BAC5B,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;wBACzD,CAAC;wBACD,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC,CAAC,CAAC;gBACX,CAAC;gBAnCL;oBAAC,iBAAU,EAAE;;+BAAA;gBAoCb,kBAAC;YAAD,CAnCA,AAmCC,IAAA;YAnCD,qCAmCC,CAAA","file":"data.service.js","sourcesContent":["import {Phone} from './phone';\nimport {Injectable} from '@angular/core';\nimport {LogService} from './log.service';\nimport {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport {Response} from '@angular/http';\nimport {User} from './user';\n\n@Injectable()\nexport class DataService{\n\n    constructor(private http: Http){ }\n\n    private data: Phone[] = [\n        { name:\"Apple iPhone 7\", price: 56000},\n        { name: \"HP Elite x3\", price: 56000},\n        { name: \"Alcatel Idol S4\", price: 25000}\n    ];\n    getData() {\n\n        return this.http.get('js/user.json')\n\n        // this.logService.write(\"операция получения данных\");\n        // return this.data;\n    }\n    addData(name: string, price: number){\n\n        this.data.push(new Phone(name, price));\n    }\n\n    getUsers() : Observable<User[]>{\n        return this.http.get('js/user.json')\n            .map((resp:Response)=>{\n\n                let usersList = resp.json().data;\n                let users :User[] = [];\n                for(let index in usersList){\n                    console.log(usersList[index]);\n                    let user = usersList[index];\n                    users.push({name: user.userName, age: user.userAge});\n                }\n                return users;\n            });\n    }\n}"],"sourceRoot":"/source/"}